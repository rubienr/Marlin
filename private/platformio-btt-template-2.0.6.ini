#
# Marlin Firmware
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf.html
#

# Automatic targets - enable auto-uploading
#targets = upload

#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#

[platformio]
src_dir      = Marlin
boards_dir   = buildroot/share/PlatformIO/boards
default_envs = BIGTREE_SKR_PRO
include_dir  = Marlin

#
# The 'common' values are used for most Marlin builds
#
[common]
default_src_filter = +<src/*> -<src/config> -<src/HAL> +<src/HAL/shared>
  -<src/lcd/HD44780> -<src/lcd/dwin> -<src/lcd/dogm> -<src/lcd/menu>
  -<src/lcd/extui/lib/mks_ui> -<src/lcd/extui/lib/dgus> -<src/lcd/extui/lib/ftdi_eve_touch_ui> -<src/lcd/extui/lib/anycubic>
  -<src/sd/usb_flashdrive>
  -<src/gcode/feature/trinamic>
  -<src/feature/bedlevel/abl> -<src/gcode/bedlevel/abl>
  -<src/feature/bedlevel/mbl> -<src/gcode/bedlevel/mbl>
  -<src/feature/bedlevel/ubl> -<src/gcode/bedlevel/ubl>
  -<src/feature/dac> -<src/feature/digipot>
  -<src/feature/leds>
extra_scripts      =
  pre:buildroot/share/PlatformIO/scripts/common-dependencies.py
  pre:buildroot/share/PlatformIO/scripts/common-cxxflags.py
build_flags        = -fmax-errors=5 -g -D__MARLIN_FIRMWARE__ -fmerge-all-constants
lib_deps           =

#
# Feature Dependencies
#
[features]
HAS_TFT_LVGL_UI         = lvgl=https://github.com/makerbase-mks/MKS-LittlevGL/archive/master.zip
                          src_filter=+<src/lcd/extui/lib/mks_ui>
                          extra_scripts=download_mks_assets.py
HAS_TRINAMIC_CONFIG     = TMCStepper@~0.7.1
                          src_filter=+<src/gcode/feature/trinamic>
SR_LCD_3W_NL            = SailfishLCD=https://github.com/mikeshub/SailfishLCD/archive/master.zip
DIGIPOT_MCP4...         = SlowSoftI2CMaster
HAS_TMC26X              = TMC26XStepper=https://github.com/trinamic/TMC26XStepper/archive/master.zip
HAS_L64XX               = Arduino-L6470@0.8.0
NEOPIXEL_LED            = Adafruit NeoPixel@1.5.0
MAX6675_IS_MAX31865     = Adafruit MAX31865 library@~1.1.0
HAS_GRAPHICAL_LCD       = U8glib-HAL@0.4.1
                          src_filter=+<src/lcd/dogm>
USES_LIQUIDCRYSTAL      = LiquidCrystal@1.5.0
USES_LIQUIDTWI2         = LiquidTWI2@1.2.7
DWIN_CREALITY_LCD       = src_filter=+<src/lcd/dwin>
HAS_CHARACTER_LCD       = src_filter=+<src/lcd/HD44780>
HAS_LCD_MENU            = src_filter=+<src/lcd/menu>
HAS_DGUS_LCD            = src_filter=+<src/lcd/extui/lib/dgus>
TOUCH_UI_FTDI_EVE       = src_filter=+<src/lcd/extui/lib/ftdi_eve_touch_ui>
ANYCUBIC_TFT_MODEL      = src_filter=+<src/lcd/extui/lib/anycubic>
USB_FLASH_DRIVE_SUPPORT = src_filter=+<src/sd/usb_flashdrive>
AUTO_BED_LEVELING_(3POINT|(BI)?LINEAR) = src_filter=+<src/feature/bedlevel/abl> +<src/gcode/bedlevel/abl>
MESH_BED_LEVELING       = src_filter=+<src/feature/bedlevel/mbl> +<src/gcode/bedlevel/mbl>
AUTO_BED_LEVELING_UBL   = src_filter=+<src/feature/bedlevel/ubl> +<src/gcode/bedlevel/ubl>
DAC_STEPPER_CURRENT     = src_filter=+<src/feature/dac>
HAS_I2C_DIGIPOT         = src_filter=+<src/feature/digipot>
HAS_LED_FEATURE         = src_filter=+<src/feature/leds>
(ESP3D_)?WIFISUPPORT = AsyncTCP, ESP Async WebServer
  ESP3DLib=https://github.com/luc-github/ESP3DLib.git
  arduinoWebSockets=https://github.com/Links2004/arduinoWebSockets.git
  ESP32SSDP=https://github.com/luc-github/ESP32SSDP.git
  lib_ignore=ESPAsyncTCP

#
# Default values apply to all 'env:' prefixed environments
#
[env]
framework     = arduino
extra_scripts = ${common.extra_scripts}
build_flags   = ${common.build_flags}
lib_deps      = ${common.lib_deps}
monitor_speed = 250000

#################################
#                               #
#   Unique Core Architectures   #
#                               #
#  Add a new "env" below if no  #
# entry has values suitable to  #
#   build for a given board.    #
#                               #
#################################

#################################
#                               #
#      STM32 Architecture       #
#                               #
#################################

#
# HAL/STM32 Base Environment values
#
[common_stm32]
platform      = ststm32@~6.1.0
platform_packages = framework-arduinoststm32@>=4.10700,<4.10800
lib_ignore    = SoftwareSerial
build_flags   = ${common.build_flags}
  -IMarlin/src/HAL/STM32 -std=gnu++14
  -DUSBCON -DUSBD_USE_CDC
  -DUSBD_VID=0x0483
  -DTIM_IRQ_PRIO=13
build_unflags = -std=gnu++11
src_filter    = ${common.default_src_filter} +<src/HAL/STM32>

#
# HAL/STM32F1 Common Environment values
#
[common_stm32f1]
platform      = ${common_stm32.platform}
build_flags   = !python Marlin/src/HAL/STM32F1/build_flags.py
  ${common.build_flags} -std=gnu++14 -DHAVE_SW_SERIAL
build_unflags = -std=gnu11
src_filter    = ${common.default_src_filter} +<src/HAL/STM32F1>
lib_ignore    = SPI
lib_deps      = ${common.lib_deps}
  SoftwareSerialM


#
# STM32F407VET6 with RAMPS-like shield
# 'Black' STM32F407VET6 board - https://wiki.stm32duino.com/index.php?title=STM32F407
# Shield - https://github.com/jmz52/Hardware
#
[env:STM32F407VE_black]
platform          = ${common_stm32.platform}
extends           = common_stm32
board             = blackSTM32F407VET6
build_flags       = ${common_stm32.build_flags}
  -DTARGET_STM32F4 -DARDUINO_BLACK_F407VE
  -DUSB_PRODUCT=\"BLACK_F407VE\"
  -DUSBD_USE_CDC_COMPOSITE -DUSE_USB_FS
extra_scripts     = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
lib_ignore        = SoftwareSerial

#
# BigTreeTech SKR Pro (STM32F407ZGT6 ARM Cortex-M4)
#
[env:BIGTREE_SKR_PRO]
platform          = ${common_stm32.platform}
extends           = common_stm32
board             = BigTree_SKR_Pro
build_flags       = ${common_stm32.build_flags}
  -DUSB_PRODUCT=\"STM32F407ZG\"
  -DTARGET_STM32F4 -DSTM32F407_5ZX -DVECT_TAB_OFFSET=0x8000
extra_scripts     = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
#upload_protocol   = stlink
#upload_command    = "$PROJECT_PACKAGES_DIR/tool-stm32duino/stlink/ST-LINK_CLI.exe" -c SWD -P "$BUILD_DIR/firmware.bin" 0x8008000 -Rst -Run
debug_tool        = stlink
debug_init_break  =

#
# Bigtreetech GTR V1.0 (STM32F407IGT6 ARM Cortex-M4)
#
[env:BIGTREE_GTR_V1_0]
platform          = ststm32@>=5.7.0,<6.2.0
extends           = common_stm32
board             = BigTree_GTR_v1
extra_scripts     = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py
build_flags       = ${common_stm32.build_flags}
  -DUSB_PRODUCT=\"STM32F407IG\"
  -DTARGET_STM32F4 -DSTM32F407IX -DVECT_TAB_OFFSET=0x8000

#
# BigTreeTech BTT002 V1.0 (STM32F407VGT6 ARM Cortex-M4)
#
[env:BIGTREE_BTT002]
platform          = ${common_stm32.platform}
extends           = common_stm32
board             = BigTree_Btt002
build_flags       = ${common_stm32.build_flags}
  -DUSB_PRODUCT=\"STM32F407VG\"
  -DTARGET_STM32F4 -DSTM32F407_5VX -DVECT_TAB_OFFSET=0x8000
  -DHAVE_HWSERIAL2
  -DHAVE_HWSERIAL3
  -DPIN_SERIAL2_RX=PD_6
  -DPIN_SERIAL2_TX=PD_5
extra_scripts     = ${common.extra_scripts}
  pre:buildroot/share/PlatformIO/scripts/generic_create_variant.py

#
# Native
# No supported Arduino libraries, base Marlin only
#
[env:linux_native]
platform        = native
framework       =
build_flags     = -D__PLAT_LINUX__ -std=gnu++17 -ggdb -g -lrt -lpthread -D__MARLIN_FIRMWARE__ -Wno-expansion-to-defined
src_build_flags = -Wall -IMarlin/src/HAL/LINUX/include
build_unflags   = -Wall
lib_ldf_mode    = off
lib_deps        =
src_filter      = ${common.default_src_filter} +<src/HAL/LINUX>

#
# Just print the dependency tree
#
[env:include_tree]
platform    = atmelavr
board       = megaatmega2560
build_flags = -c -H -std=gnu++11 -Wall -Os -D__MARLIN_FIRMWARE__
src_filter  = +<src/Marlin.cpp>
